{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _bowser = require('bowser');\n\nvar _bowser2 = _interopRequireDefault(_bowser);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar vendorPrefixes = {\n  Webkit: ['chrome', 'safari', 'ios', 'android', 'phantom', 'opera', 'webos', 'blackberry', 'bada', 'tizen', 'chromium', 'vivaldi'],\n  Moz: ['firefox', 'seamonkey', 'sailfish'],\n  ms: ['msie', 'msedge']\n};\nvar browsers = {\n  chrome: [['chrome'], ['chromium']],\n  safari: [['safari']],\n  firefox: [['firefox']],\n  edge: [['msedge']],\n  opera: [['opera'], ['vivaldi']],\n  ios_saf: [['ios', 'mobile'], ['ios', 'tablet']],\n  ie: [['msie']],\n  op_mini: [['opera', 'mobile'], ['opera', 'tablet']],\n  and_uc: [['android', 'mobile'], ['android', 'tablet']],\n  android: [['android', 'mobile'], ['android', 'tablet']]\n};\n\nvar browserByInfo = function browserByInfo(info) {\n  if (info.firefox) {\n    return 'firefox';\n  }\n\n  var name = '';\n  Object.keys(browsers).forEach(function (browser) {\n    browsers[browser].forEach(function (condition) {\n      var match = 0;\n      condition.forEach(function (single) {\n        if (info[single]) {\n          match += 1;\n        }\n      });\n\n      if (condition.length === match) {\n        name = browser;\n      }\n    });\n  });\n  return name;\n};\n/**\n * Uses bowser to get default browser information such as version and name\n * Evaluates bowser info and adds vendorPrefix information\n * @param {string} userAgent - userAgent that gets evaluated\n */\n\n\nexports.default = function (userAgent) {\n  if (!userAgent) {\n    return false;\n  }\n\n  var info = _bowser2.default._detect(userAgent);\n\n  Object.keys(vendorPrefixes).forEach(function (prefix) {\n    vendorPrefixes[prefix].forEach(function (browser) {\n      if (info[browser]) {\n        info.prefix = {\n          inline: prefix,\n          css: '-' + prefix.toLowerCase() + '-'\n        };\n      }\n    });\n  });\n  info.browser = browserByInfo(info); // For cordova IOS 8 the version is missing, set truncated osversion to prevent NaN\n\n  info.version = info.version ? parseFloat(info.version) : parseInt(parseFloat(info.osversion), 10);\n  info.osversion = parseFloat(info.osversion); // iOS forces all browsers to use Safari under the hood\n  // as the Safari version seems to match the iOS version\n  // we just explicitely use the osversion instead\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/72\n\n  if (info.browser === 'ios_saf' && info.version > info.osversion) {\n    info.version = info.osversion;\n    info.safari = true;\n  } // seperate native android chrome\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/45\n\n\n  if (info.browser === 'android' && info.chrome && info.version > 37) {\n    info.browser = 'and_chr';\n  } // For android < 4.4 we want to check the osversion\n  // not the chrome version, see issue #26\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/26\n\n\n  if (info.browser === 'android' && info.osversion < 5) {\n    info.version = info.osversion;\n  }\n\n  return info;\n};\n\nmodule.exports = exports['default'];","map":{"version":3,"names":["Object","defineProperty","exports","value","_bowser","require","_bowser2","_interopRequireDefault","obj","__esModule","default","vendorPrefixes","Webkit","Moz","ms","browsers","chrome","safari","firefox","edge","opera","ios_saf","ie","op_mini","and_uc","android","browserByInfo","info","name","keys","forEach","browser","condition","match","single","length","userAgent","_detect","prefix","inline","css","toLowerCase","version","parseFloat","parseInt","osversion","module"],"sources":["/Users/janhavi/Real-Time-Recs-UKDale/FrontEnd/node_modules/inline-style-prefixer/lib/utils/getBrowserInformation.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _bowser = require('bowser');\n\nvar _bowser2 = _interopRequireDefault(_bowser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar vendorPrefixes = {\n  Webkit: ['chrome', 'safari', 'ios', 'android', 'phantom', 'opera', 'webos', 'blackberry', 'bada', 'tizen', 'chromium', 'vivaldi'],\n  Moz: ['firefox', 'seamonkey', 'sailfish'],\n  ms: ['msie', 'msedge']\n};\nvar browsers = {\n  chrome: [['chrome'], ['chromium']],\n  safari: [['safari']],\n  firefox: [['firefox']],\n  edge: [['msedge']],\n  opera: [['opera'], ['vivaldi']],\n  ios_saf: [['ios', 'mobile'], ['ios', 'tablet']],\n  ie: [['msie']],\n  op_mini: [['opera', 'mobile'], ['opera', 'tablet']],\n  and_uc: [['android', 'mobile'], ['android', 'tablet']],\n  android: [['android', 'mobile'], ['android', 'tablet']]\n};\n\nvar browserByInfo = function browserByInfo(info) {\n  if (info.firefox) {\n    return 'firefox';\n  }\n  var name = '';\n\n  Object.keys(browsers).forEach(function (browser) {\n    browsers[browser].forEach(function (condition) {\n      var match = 0;\n      condition.forEach(function (single) {\n        if (info[single]) {\n          match += 1;\n        }\n      });\n      if (condition.length === match) {\n        name = browser;\n      }\n    });\n  });\n\n  return name;\n};\n\n/**\n * Uses bowser to get default browser information such as version and name\n * Evaluates bowser info and adds vendorPrefix information\n * @param {string} userAgent - userAgent that gets evaluated\n */\n\nexports.default = function (userAgent) {\n  if (!userAgent) {\n    return false;\n  }\n  var info = _bowser2.default._detect(userAgent);\n\n  Object.keys(vendorPrefixes).forEach(function (prefix) {\n    vendorPrefixes[prefix].forEach(function (browser) {\n      if (info[browser]) {\n        info.prefix = {\n          inline: prefix,\n          css: '-' + prefix.toLowerCase() + '-'\n        };\n      }\n    });\n  });\n\n  info.browser = browserByInfo(info);\n\n  // For cordova IOS 8 the version is missing, set truncated osversion to prevent NaN\n  info.version = info.version ? parseFloat(info.version) : parseInt(parseFloat(info.osversion), 10);\n  info.osversion = parseFloat(info.osversion);\n\n  // iOS forces all browsers to use Safari under the hood\n  // as the Safari version seems to match the iOS version\n  // we just explicitely use the osversion instead\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/72\n  if (info.browser === 'ios_saf' && info.version > info.osversion) {\n    info.version = info.osversion;\n    info.safari = true;\n  }\n\n  // seperate native android chrome\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/45\n  if (info.browser === 'android' && info.chrome && info.version > 37) {\n    info.browser = 'and_chr';\n  }\n\n  // For android < 4.4 we want to check the osversion\n  // not the chrome version, see issue #26\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/26\n  if (info.browser === 'android' && info.osversion < 5) {\n    info.version = info.osversion;\n  }\n\n  return info;\n};\n\nmodule.exports = exports['default'];"],"mappings":"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"},"metadata":{},"sourceType":"script"}