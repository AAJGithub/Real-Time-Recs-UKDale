{"ast":null,"code":"/*!\n * Bowser - a browser detector\n * https://github.com/ded/bowser\n * MIT License | (c) Dustin Diaz 2015\n */\n!function (root, name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition();else if (typeof define == 'function' && define.amd) define(name, definition);else root[name] = definition();\n}(this, 'bowser', function () {\n  /**\n    * See useragents.js for examples of navigator.userAgent\n    */\n  var t = true;\n\n  function detect(ua) {\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return match && match.length > 1 && match[1] || '';\n    }\n\n    function getSecondMatch(regex) {\n      var match = ua.match(regex);\n      return match && match.length > 1 && match[2] || '';\n    }\n\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase(),\n        likeAndroid = /like android/i.test(ua),\n        android = !likeAndroid && /android/i.test(ua),\n        nexusMobile = /nexus\\s*[0-6]\\s*/i.test(ua),\n        nexusTablet = !nexusMobile && /nexus\\s*[0-9]+/i.test(ua),\n        chromeos = /CrOS/.test(ua),\n        silk = /silk/i.test(ua),\n        sailfish = /sailfish/i.test(ua),\n        tizen = /tizen/i.test(ua),\n        webos = /(web|hpw)(o|0)s/i.test(ua),\n        windowsphone = /windows phone/i.test(ua),\n        samsungBrowser = /SamsungBrowser/i.test(ua),\n        windows = !windowsphone && /windows/i.test(ua),\n        mac = !iosdevice && !silk && /macintosh/i.test(ua),\n        linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua),\n        edgeVersion = getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.\\d+)?)/i),\n        versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i),\n        tablet = /tablet/i.test(ua) && !/tablet pc/i.test(ua),\n        mobile = !tablet && /[^-]mobi/i.test(ua),\n        xbox = /xbox/i.test(ua),\n        result;\n\n    if (/opera/i.test(ua)) {\n      //  an old Opera\n      result = {\n        name: 'Opera',\n        opera: t,\n        version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/opr\\/|opios/i.test(ua)) {\n      // a new Opera\n      result = {\n        name: 'Opera',\n        opera: t,\n        version: getFirstMatch(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    } else if (/SamsungBrowser/i.test(ua)) {\n      result = {\n        name: 'Samsung Internet for Android',\n        samsungBrowser: t,\n        version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/Whale/i.test(ua)) {\n      result = {\n        name: 'NAVER Whale browser',\n        whale: t,\n        version: getFirstMatch(/(?:whale)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/MZBrowser/i.test(ua)) {\n      result = {\n        name: 'MZ Browser',\n        mzbrowser: t,\n        version: getFirstMatch(/(?:MZBrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/coast/i.test(ua)) {\n      result = {\n        name: 'Opera Coast',\n        coast: t,\n        version: versionIdentifier || getFirstMatch(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/focus/i.test(ua)) {\n      result = {\n        name: 'Focus',\n        focus: t,\n        version: getFirstMatch(/(?:focus)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/yabrowser/i.test(ua)) {\n      result = {\n        name: 'Yandex Browser',\n        yandexbrowser: t,\n        version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/ucbrowser/i.test(ua)) {\n      result = {\n        name: 'UC Browser',\n        ucbrowser: t,\n        version: getFirstMatch(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/mxios/i.test(ua)) {\n      result = {\n        name: 'Maxthon',\n        maxthon: t,\n        version: getFirstMatch(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/epiphany/i.test(ua)) {\n      result = {\n        name: 'Epiphany',\n        epiphany: t,\n        version: getFirstMatch(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/puffin/i.test(ua)) {\n      result = {\n        name: 'Puffin',\n        puffin: t,\n        version: getFirstMatch(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)\n      };\n    } else if (/sleipnir/i.test(ua)) {\n      result = {\n        name: 'Sleipnir',\n        sleipnir: t,\n        version: getFirstMatch(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/k-meleon/i.test(ua)) {\n      result = {\n        name: 'K-Meleon',\n        kMeleon: t,\n        version: getFirstMatch(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (windowsphone) {\n      result = {\n        name: 'Windows Phone',\n        osname: 'Windows Phone',\n        windowsphone: t\n      };\n\n      if (edgeVersion) {\n        result.msedge = t;\n        result.version = edgeVersion;\n      } else {\n        result.msie = t;\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i);\n      }\n    } else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer',\n        msie: t,\n        version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (chromeos) {\n      result = {\n        name: 'Chrome',\n        osname: 'Chrome OS',\n        chromeos: t,\n        chromeBook: t,\n        chrome: t,\n        version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/edg([ea]|ios)/i.test(ua)) {\n      result = {\n        name: 'Microsoft Edge',\n        msedge: t,\n        version: edgeVersion\n      };\n    } else if (/vivaldi/i.test(ua)) {\n      result = {\n        name: 'Vivaldi',\n        vivaldi: t,\n        version: getFirstMatch(/vivaldi\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    } else if (sailfish) {\n      result = {\n        name: 'Sailfish',\n        osname: 'Sailfish OS',\n        sailfish: t,\n        version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey',\n        seamonkey: t,\n        version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/firefox|iceweasel|fxios/i.test(ua)) {\n      result = {\n        name: 'Firefox',\n        firefox: t,\n        version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)\n      };\n\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t;\n        result.osname = 'Firefox OS';\n      }\n    } else if (silk) {\n      result = {\n        name: 'Amazon Silk',\n        silk: t,\n        version: getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS',\n        phantom: t,\n        version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/slimerjs/i.test(ua)) {\n      result = {\n        name: 'SlimerJS',\n        slimer: t,\n        version: getFirstMatch(/slimerjs\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry',\n        osname: 'BlackBerry OS',\n        blackberry: t,\n        version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (webos) {\n      result = {\n        name: 'WebOS',\n        osname: 'WebOS',\n        webos: t,\n        version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t);\n    } else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada',\n        osname: 'Bada',\n        bada: t,\n        version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (tizen) {\n      result = {\n        name: 'Tizen',\n        osname: 'Tizen',\n        tizen: t,\n        version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    } else if (/qupzilla/i.test(ua)) {\n      result = {\n        name: 'QupZilla',\n        qupzilla: t,\n        version: getFirstMatch(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i) || versionIdentifier\n      };\n    } else if (/chromium/i.test(ua)) {\n      result = {\n        name: 'Chromium',\n        chromium: t,\n        version: getFirstMatch(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i) || versionIdentifier\n      };\n    } else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome',\n        chrome: t,\n        version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (android) {\n      result = {\n        name: 'Android',\n        version: versionIdentifier\n      };\n    } else if (/safari|applewebkit/i.test(ua)) {\n      result = {\n        name: 'Safari',\n        safari: t\n      };\n\n      if (versionIdentifier) {\n        result.version = versionIdentifier;\n      }\n    } else if (iosdevice) {\n      result = {\n        name: iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n      }; // WTF: version is not part of user agent in web apps\n\n      if (versionIdentifier) {\n        result.version = versionIdentifier;\n      }\n    } else if (/googlebot/i.test(ua)) {\n      result = {\n        name: 'Googlebot',\n        googlebot: t,\n        version: getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i) || versionIdentifier\n      };\n    } else {\n      result = {\n        name: getFirstMatch(/^(.*)\\/(.*) /),\n        version: getSecondMatch(/^(.*)\\/(.*) /)\n      };\n    } // set webkit or gecko flag for browsers based on these engines\n\n\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n      if (/(apple)?webkit\\/537\\.36/i.test(ua)) {\n        result.name = result.name || \"Blink\";\n        result.blink = t;\n      } else {\n        result.name = result.name || \"Webkit\";\n        result.webkit = t;\n      }\n\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier;\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\";\n      result.gecko = t;\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i);\n    } // set OS flags for platforms that have multiple browsers\n\n\n    if (!result.windowsphone && (android || result.silk)) {\n      result.android = t;\n      result.osname = 'Android';\n    } else if (!result.windowsphone && iosdevice) {\n      result[iosdevice] = t;\n      result.ios = t;\n      result.osname = 'iOS';\n    } else if (mac) {\n      result.mac = t;\n      result.osname = 'macOS';\n    } else if (xbox) {\n      result.xbox = t;\n      result.osname = 'Xbox';\n    } else if (windows) {\n      result.windows = t;\n      result.osname = 'Windows';\n    } else if (linux) {\n      result.linux = t;\n      result.osname = 'Linux';\n    }\n\n    function getWindowsVersion(s) {\n      switch (s) {\n        case 'NT':\n          return 'NT';\n\n        case 'XP':\n          return 'XP';\n\n        case 'NT 5.0':\n          return '2000';\n\n        case 'NT 5.1':\n          return 'XP';\n\n        case 'NT 5.2':\n          return '2003';\n\n        case 'NT 6.0':\n          return 'Vista';\n\n        case 'NT 6.1':\n          return '7';\n\n        case 'NT 6.2':\n          return '8';\n\n        case 'NT 6.3':\n          return '8.1';\n\n        case 'NT 10.0':\n          return '10';\n\n        default:\n          return undefined;\n      }\n    } // OS version extraction\n\n\n    var osVersion = '';\n\n    if (result.windows) {\n      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i));\n    } else if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (result.mac) {\n      osVersion = getFirstMatch(/Mac OS X (\\d+([_\\.\\s]\\d+)*)/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n\n    if (osVersion) {\n      result.osversion = osVersion;\n    } // device type extraction\n\n\n    var osMajorVersion = !result.windows && osVersion.split('.')[0];\n\n    if (tablet || nexusTablet || iosdevice == 'ipad' || android && (osMajorVersion == 3 || osMajorVersion >= 4 && !mobile) || result.silk) {\n      result.tablet = t;\n    } else if (mobile || iosdevice == 'iphone' || iosdevice == 'ipod' || android || nexusMobile || result.blackberry || result.webos || result.bada) {\n      result.mobile = t;\n    } // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n\n\n    if (result.msedge || result.msie && result.version >= 10 || result.yandexbrowser && result.version >= 15 || result.vivaldi && result.version >= 1.0 || result.chrome && result.version >= 20 || result.samsungBrowser && result.version >= 4 || result.whale && compareVersions([result.version, '1.0']) === 1 || result.mzbrowser && compareVersions([result.version, '6.0']) === 1 || result.focus && compareVersions([result.version, '1.0']) === 1 || result.firefox && result.version >= 20.0 || result.safari && result.version >= 6 || result.opera && result.version >= 10.0 || result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6 || result.blackberry && result.version >= 10.1 || result.chromium && result.version >= 20) {\n      result.a = t;\n    } else if (result.msie && result.version < 10 || result.chrome && result.version < 20 || result.firefox && result.version < 20.0 || result.safari && result.version < 6 || result.opera && result.version < 10.0 || result.ios && result.osversion && result.osversion.split(\".\")[0] < 6 || result.chromium && result.version < 20) {\n      result.c = t;\n    } else result.x = t;\n\n    return result;\n  }\n\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '');\n\n  bowser.test = function (browserList) {\n    for (var i = 0; i < browserList.length; ++i) {\n      var browserItem = browserList[i];\n\n      if (typeof browserItem === 'string') {\n        if (browserItem in bowser) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n\n\n  function getVersionPrecision(version) {\n    return version.split(\".\").length;\n  }\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n\n\n  function map(arr, iterator) {\n    var result = [],\n        i;\n\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n\n    for (i = 0; i < arr.length; i++) {\n      result.push(iterator(arr[i]));\n    }\n\n    return result;\n  }\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\n   *\n   * @param  {Array<String>} versions versions to compare\n   * @return {Number} comparison result\n   */\n\n\n  function compareVersions(versions) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\n    var chunks = map(versions, function (version) {\n      var delta = precision - getVersionPrecision(version); // 2) \"9\" -> \"9.0\" (for precision = 2)\n\n      version = version + new Array(delta + 1).join(\".0\"); // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n\n      return map(version.split(\".\"), function (chunk) {\n        return new Array(20 - chunk.length).join(\"0\") + chunk;\n      }).reverse();\n    }); // iterate in reverse order by reversed chunks array\n\n    while (--precision >= 0) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      } else if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === 0) {\n          // all version chunks are same\n          return 0;\n        }\n      } else {\n        return -1;\n      }\n    }\n  }\n  /**\n   * Check if browser is unsupported\n   *\n   * @example\n   *   bowser.isUnsupportedBrowser({\n   *     msie: \"10\",\n   *     firefox: \"23\",\n   *     chrome: \"29\",\n   *     safari: \"5.1\",\n   *     opera: \"16\",\n   *     phantom: \"534\"\n   *   });\n   *\n   * @param  {Object}  minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n\n\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\n    var _bowser = bowser; // make strictMode param optional with ua param usage\n\n    if (typeof strictMode === 'string') {\n      ua = strictMode;\n      strictMode = void 0;\n    }\n\n    if (strictMode === void 0) {\n      strictMode = false;\n    }\n\n    if (ua) {\n      _bowser = detect(ua);\n    }\n\n    var version = \"\" + _bowser.version;\n\n    for (var browser in minVersions) {\n      if (minVersions.hasOwnProperty(browser)) {\n        if (_bowser[browser]) {\n          if (typeof minVersions[browser] !== 'string') {\n            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\n          } // browser version and min supported version.\n\n\n          return compareVersions([version, minVersions[browser]]) < 0;\n        }\n      }\n    }\n\n    return strictMode; // not found\n  }\n  /**\n   * Check if browser is supported\n   *\n   * @param  {Object} minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n\n\n  function check(minVersions, strictMode, ua) {\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\n  }\n\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\n  bowser.compareVersions = compareVersions;\n  bowser.check = check;\n  /*\n   * Set our detect method to the main bowser object so we can\n   * reuse it to test other user agents.\n   * This is needed to implement future tests.\n   */\n\n  bowser._detect = detect;\n  /*\n   * Set our detect public method to the main bowser object\n   * This is needed to implement bowser in server side\n   */\n\n  bowser.detect = detect;\n  return bowser;\n});","map":{"version":3,"names":["root","name","definition","module","exports","define","amd","t","detect","ua","getFirstMatch","regex","match","length","getSecondMatch","iosdevice","toLowerCase","likeAndroid","test","android","nexusMobile","nexusTablet","chromeos","silk","sailfish","tizen","webos","windowsphone","samsungBrowser","windows","mac","linux","edgeVersion","versionIdentifier","tablet","mobile","xbox","result","opera","version","whale","mzbrowser","coast","focus","yandexbrowser","ucbrowser","maxthon","epiphany","puffin","sleipnir","kMeleon","osname","msedge","msie","chromeBook","chrome","vivaldi","seamonkey","firefox","firefoxos","phantom","slimer","blackberry","touchpad","bada","qupzilla","chromium","safari","googlebot","blink","webkit","gecko","ios","getWindowsVersion","s","undefined","osVersion","replace","osversion","osMajorVersion","split","compareVersions","a","c","x","bowser","navigator","userAgent","browserList","i","browserItem","getVersionPrecision","map","arr","iterator","Array","prototype","call","push","versions","precision","Math","max","chunks","delta","join","chunk","reverse","isUnsupportedBrowser","minVersions","strictMode","_bowser","browser","hasOwnProperty","Error","String","check","_detect"],"sources":["/Users/janhavi/Real-Time-Recs-UKDale/FrontEnd/node_modules/bowser/src/bowser.js"],"sourcesContent":["/*!\n * Bowser - a browser detector\n * https://github.com/ded/bowser\n * MIT License | (c) Dustin Diaz 2015\n */\n\n!function (root, name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(name, definition)\n  else root[name] = definition()\n}(this, 'bowser', function () {\n  /**\n    * See useragents.js for examples of navigator.userAgent\n    */\n\n  var t = true\n\n  function detect(ua) {\n\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[1]) || '';\n    }\n\n    function getSecondMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[2]) || '';\n    }\n\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\n      , likeAndroid = /like android/i.test(ua)\n      , android = !likeAndroid && /android/i.test(ua)\n      , nexusMobile = /nexus\\s*[0-6]\\s*/i.test(ua)\n      , nexusTablet = !nexusMobile && /nexus\\s*[0-9]+/i.test(ua)\n      , chromeos = /CrOS/.test(ua)\n      , silk = /silk/i.test(ua)\n      , sailfish = /sailfish/i.test(ua)\n      , tizen = /tizen/i.test(ua)\n      , webos = /(web|hpw)(o|0)s/i.test(ua)\n      , windowsphone = /windows phone/i.test(ua)\n      , samsungBrowser = /SamsungBrowser/i.test(ua)\n      , windows = !windowsphone && /windows/i.test(ua)\n      , mac = !iosdevice && !silk && /macintosh/i.test(ua)\n      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)\n      , edgeVersion = getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.\\d+)?)/i)\n      , versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i)\n      , tablet = /tablet/i.test(ua) && !/tablet pc/i.test(ua)\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\n      , xbox = /xbox/i.test(ua)\n      , result\n\n    if (/opera/i.test(ua)) {\n      //  an old Opera\n      result = {\n        name: 'Opera'\n      , opera: t\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/opr\\/|opios/i.test(ua)) {\n      // a new Opera\n      result = {\n        name: 'Opera'\n        , opera: t\n        , version: getFirstMatch(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/SamsungBrowser/i.test(ua)) {\n      result = {\n        name: 'Samsung Internet for Android'\n        , samsungBrowser: t\n        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/Whale/i.test(ua)) {\n      result = {\n        name: 'NAVER Whale browser'\n        , whale: t\n        , version: getFirstMatch(/(?:whale)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/MZBrowser/i.test(ua)) {\n      result = {\n        name: 'MZ Browser'\n        , mzbrowser: t\n        , version: getFirstMatch(/(?:MZBrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/coast/i.test(ua)) {\n      result = {\n        name: 'Opera Coast'\n        , coast: t\n        , version: versionIdentifier || getFirstMatch(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/focus/i.test(ua)) {\n      result = {\n        name: 'Focus'\n        , focus: t\n        , version: getFirstMatch(/(?:focus)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/yabrowser/i.test(ua)) {\n      result = {\n        name: 'Yandex Browser'\n      , yandexbrowser: t\n      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/ucbrowser/i.test(ua)) {\n      result = {\n          name: 'UC Browser'\n        , ucbrowser: t\n        , version: getFirstMatch(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/mxios/i.test(ua)) {\n      result = {\n        name: 'Maxthon'\n        , maxthon: t\n        , version: getFirstMatch(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/epiphany/i.test(ua)) {\n      result = {\n        name: 'Epiphany'\n        , epiphany: t\n        , version: getFirstMatch(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/puffin/i.test(ua)) {\n      result = {\n        name: 'Puffin'\n        , puffin: t\n        , version: getFirstMatch(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)\n      }\n    }\n    else if (/sleipnir/i.test(ua)) {\n      result = {\n        name: 'Sleipnir'\n        , sleipnir: t\n        , version: getFirstMatch(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/k-meleon/i.test(ua)) {\n      result = {\n        name: 'K-Meleon'\n        , kMeleon: t\n        , version: getFirstMatch(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (windowsphone) {\n      result = {\n        name: 'Windows Phone'\n      , osname: 'Windows Phone'\n      , windowsphone: t\n      }\n      if (edgeVersion) {\n        result.msedge = t\n        result.version = edgeVersion\n      }\n      else {\n        result.msie = t\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer'\n      , msie: t\n      , version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (chromeos) {\n      result = {\n        name: 'Chrome'\n      , osname: 'Chrome OS'\n      , chromeos: t\n      , chromeBook: t\n      , chrome: t\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/edg([ea]|ios)/i.test(ua)) {\n      result = {\n        name: 'Microsoft Edge'\n      , msedge: t\n      , version: edgeVersion\n      }\n    }\n    else if (/vivaldi/i.test(ua)) {\n      result = {\n        name: 'Vivaldi'\n        , vivaldi: t\n        , version: getFirstMatch(/vivaldi\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (sailfish) {\n      result = {\n        name: 'Sailfish'\n      , osname: 'Sailfish OS'\n      , sailfish: t\n      , version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey'\n      , seamonkey: t\n      , version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/firefox|iceweasel|fxios/i.test(ua)) {\n      result = {\n        name: 'Firefox'\n      , firefox: t\n      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)\n      }\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t\n        result.osname = 'Firefox OS'\n      }\n    }\n    else if (silk) {\n      result =  {\n        name: 'Amazon Silk'\n      , silk: t\n      , version : getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS'\n      , phantom: t\n      , version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/slimerjs/i.test(ua)) {\n      result = {\n        name: 'SlimerJS'\n        , slimer: t\n        , version: getFirstMatch(/slimerjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry'\n      , osname: 'BlackBerry OS'\n      , blackberry: t\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (webos) {\n      result = {\n        name: 'WebOS'\n      , osname: 'WebOS'\n      , webos: t\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t)\n    }\n    else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada'\n      , osname: 'Bada'\n      , bada: t\n      , version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    }\n    else if (tizen) {\n      result = {\n        name: 'Tizen'\n      , osname: 'Tizen'\n      , tizen: t\n      , version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    }\n    else if (/qupzilla/i.test(ua)) {\n      result = {\n        name: 'QupZilla'\n        , qupzilla: t\n        , version: getFirstMatch(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i) || versionIdentifier\n      }\n    }\n    else if (/chromium/i.test(ua)) {\n      result = {\n        name: 'Chromium'\n        , chromium: t\n        , version: getFirstMatch(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome'\n        , chrome: t\n        , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (android) {\n      result = {\n        name: 'Android'\n        , version: versionIdentifier\n      }\n    }\n    else if (/safari|applewebkit/i.test(ua)) {\n      result = {\n        name: 'Safari'\n      , safari: t\n      }\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if (iosdevice) {\n      result = {\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n      }\n      // WTF: version is not part of user agent in web apps\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if(/googlebot/i.test(ua)) {\n      result = {\n        name: 'Googlebot'\n      , googlebot: t\n      , version: getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i) || versionIdentifier\n      }\n    }\n    else {\n      result = {\n        name: getFirstMatch(/^(.*)\\/(.*) /),\n        version: getSecondMatch(/^(.*)\\/(.*) /)\n     };\n   }\n\n    // set webkit or gecko flag for browsers based on these engines\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n      if (/(apple)?webkit\\/537\\.36/i.test(ua)) {\n        result.name = result.name || \"Blink\"\n        result.blink = t\n      } else {\n        result.name = result.name || \"Webkit\"\n        result.webkit = t\n      }\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\"\n      result.gecko = t\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i)\n    }\n\n    // set OS flags for platforms that have multiple browsers\n    if (!result.windowsphone && (android || result.silk)) {\n      result.android = t\n      result.osname = 'Android'\n    } else if (!result.windowsphone && iosdevice) {\n      result[iosdevice] = t\n      result.ios = t\n      result.osname = 'iOS'\n    } else if (mac) {\n      result.mac = t\n      result.osname = 'macOS'\n    } else if (xbox) {\n      result.xbox = t\n      result.osname = 'Xbox'\n    } else if (windows) {\n      result.windows = t\n      result.osname = 'Windows'\n    } else if (linux) {\n      result.linux = t\n      result.osname = 'Linux'\n    }\n\n    function getWindowsVersion (s) {\n      switch (s) {\n        case 'NT': return 'NT'\n        case 'XP': return 'XP'\n        case 'NT 5.0': return '2000'\n        case 'NT 5.1': return 'XP'\n        case 'NT 5.2': return '2003'\n        case 'NT 6.0': return 'Vista'\n        case 'NT 6.1': return '7'\n        case 'NT 6.2': return '8'\n        case 'NT 6.3': return '8.1'\n        case 'NT 10.0': return '10'\n        default: return undefined\n      }\n    }\n\n    // OS version extraction\n    var osVersion = '';\n    if (result.windows) {\n      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i))\n    } else if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (result.mac) {\n      osVersion = getFirstMatch(/Mac OS X (\\d+([_\\.\\s]\\d+)*)/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n    if (osVersion) {\n      result.osversion = osVersion;\n    }\n\n    // device type extraction\n    var osMajorVersion = !result.windows && osVersion.split('.')[0];\n    if (\n         tablet\n      || nexusTablet\n      || iosdevice == 'ipad'\n      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))\n      || result.silk\n    ) {\n      result.tablet = t\n    } else if (\n         mobile\n      || iosdevice == 'iphone'\n      || iosdevice == 'ipod'\n      || android\n      || nexusMobile\n      || result.blackberry\n      || result.webos\n      || result.bada\n    ) {\n      result.mobile = t\n    }\n\n    // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n    if (result.msedge ||\n        (result.msie && result.version >= 10) ||\n        (result.yandexbrowser && result.version >= 15) ||\n\t\t    (result.vivaldi && result.version >= 1.0) ||\n        (result.chrome && result.version >= 20) ||\n        (result.samsungBrowser && result.version >= 4) ||\n        (result.whale && compareVersions([result.version, '1.0']) === 1) ||\n        (result.mzbrowser && compareVersions([result.version, '6.0']) === 1) ||\n        (result.focus && compareVersions([result.version, '1.0']) === 1) ||\n        (result.firefox && result.version >= 20.0) ||\n        (result.safari && result.version >= 6) ||\n        (result.opera && result.version >= 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6) ||\n        (result.blackberry && result.version >= 10.1)\n        || (result.chromium && result.version >= 20)\n        ) {\n      result.a = t;\n    }\n    else if ((result.msie && result.version < 10) ||\n        (result.chrome && result.version < 20) ||\n        (result.firefox && result.version < 20.0) ||\n        (result.safari && result.version < 6) ||\n        (result.opera && result.version < 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] < 6)\n        || (result.chromium && result.version < 20)\n        ) {\n      result.c = t\n    } else result.x = t\n\n    return result\n  }\n\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')\n\n  bowser.test = function (browserList) {\n    for (var i = 0; i < browserList.length; ++i) {\n      var browserItem = browserList[i];\n      if (typeof browserItem=== 'string') {\n        if (browserItem in bowser) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n  function getVersionPrecision(version) {\n    return version.split(\".\").length;\n  }\n\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n  function map(arr, iterator) {\n    var result = [], i;\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n    for (i = 0; i < arr.length; i++) {\n      result.push(iterator(arr[i]));\n    }\n    return result;\n  }\n\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\n   *\n   * @param  {Array<String>} versions versions to compare\n   * @return {Number} comparison result\n   */\n  function compareVersions(versions) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\n    var chunks = map(versions, function (version) {\n      var delta = precision - getVersionPrecision(version);\n\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\n      version = version + new Array(delta + 1).join(\".0\");\n\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n      return map(version.split(\".\"), function (chunk) {\n        return new Array(20 - chunk.length).join(\"0\") + chunk;\n      }).reverse();\n    });\n\n    // iterate in reverse order by reversed chunks array\n    while (--precision >= 0) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      }\n      else if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === 0) {\n          // all version chunks are same\n          return 0;\n        }\n      }\n      else {\n        return -1;\n      }\n    }\n  }\n\n  /**\n   * Check if browser is unsupported\n   *\n   * @example\n   *   bowser.isUnsupportedBrowser({\n   *     msie: \"10\",\n   *     firefox: \"23\",\n   *     chrome: \"29\",\n   *     safari: \"5.1\",\n   *     opera: \"16\",\n   *     phantom: \"534\"\n   *   });\n   *\n   * @param  {Object}  minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\n    var _bowser = bowser;\n\n    // make strictMode param optional with ua param usage\n    if (typeof strictMode === 'string') {\n      ua = strictMode;\n      strictMode = void(0);\n    }\n\n    if (strictMode === void(0)) {\n      strictMode = false;\n    }\n    if (ua) {\n      _bowser = detect(ua);\n    }\n\n    var version = \"\" + _bowser.version;\n    for (var browser in minVersions) {\n      if (minVersions.hasOwnProperty(browser)) {\n        if (_bowser[browser]) {\n          if (typeof minVersions[browser] !== 'string') {\n            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\n          }\n\n          // browser version and min supported version.\n          return compareVersions([version, minVersions[browser]]) < 0;\n        }\n      }\n    }\n\n    return strictMode; // not found\n  }\n\n  /**\n   * Check if browser is supported\n   *\n   * @param  {Object} minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function check(minVersions, strictMode, ua) {\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\n  }\n\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\n  bowser.compareVersions = compareVersions;\n  bowser.check = check;\n\n  /*\n   * Set our detect method to the main bowser object so we can\n   * reuse it to test other user agents.\n   * This is needed to implement future tests.\n   */\n  bowser._detect = detect;\n\n  /*\n   * Set our detect public method to the main bowser object\n   * This is needed to implement bowser in server side\n   */\n  bowser.detect = detect;\n  return bowser\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}